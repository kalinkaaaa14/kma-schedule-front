[{"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\index.js":"1","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\App.js":"2","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\store\\auth-context.js":"3","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\HomePage.js":"4","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignInPage.js":"5","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\Records.js":"6","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddGroupPage.js":"7","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignUpPage.js":"8","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\Layout.js":"9","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddGroupForm.js":"10","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignUpForm.js":"11","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignInForm.js":"12","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\MainNavigation.js":"13","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddDisciplinePage.js":"14","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddDisciplineForm.js":"15","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddRecordPage.js":"16","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddRecordForm.js":"17","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Records\\RecordsTable.js":"18","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\hooks\\getData.js":"19"},{"size":385,"mtime":1639000537729,"results":"20","hashOfConfig":"21"},{"size":1587,"mtime":1639010062983,"results":"22","hashOfConfig":"21"},{"size":1510,"mtime":1639000537732,"results":"23","hashOfConfig":"21"},{"size":113,"mtime":1639000537730,"results":"24","hashOfConfig":"21"},{"size":174,"mtime":1639000537731,"results":"25","hashOfConfig":"21"},{"size":672,"mtime":1639084395583,"results":"26","hashOfConfig":"21"},{"size":185,"mtime":1639000827087,"results":"27","hashOfConfig":"21"},{"size":174,"mtime":1639000537731,"results":"28","hashOfConfig":"21"},{"size":345,"mtime":1639000537725,"results":"29","hashOfConfig":"21"},{"size":5531,"mtime":1639009188974,"results":"30","hashOfConfig":"21"},{"size":2912,"mtime":1639000537724,"results":"31","hashOfConfig":"21"},{"size":3007,"mtime":1639000537724,"results":"32","hashOfConfig":"21"},{"size":2508,"mtime":1639010062974,"results":"33","hashOfConfig":"21"},{"size":212,"mtime":1639008654445,"results":"34","hashOfConfig":"21"},{"size":2875,"mtime":1639009327237,"results":"35","hashOfConfig":"21"},{"size":191,"mtime":1639010062975,"results":"36","hashOfConfig":"21"},{"size":4627,"mtime":1639010062973,"results":"37","hashOfConfig":"21"},{"size":6305,"mtime":1639090891026,"results":"38","hashOfConfig":"21"},{"size":671,"mtime":1639010062974,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"oo74vn",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\index.js",[],["86","87"],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\App.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\store\\auth-context.js",["88"],"import React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    roles: [],\r\n    login: (token) => {},\r\n    logout: () => {},\r\n});\r\n\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = cookies.get('token');\r\n\r\n    return {\r\n        token: storedToken\r\n    };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const history = useHistory();\r\n    const tokenData = retrieveStoredToken().token;\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    }\r\n\r\n    const [token, setToken] = useState(initialToken);\r\n    const [roles, setRoles] = useState([]);\r\n    const userIsLoggedIn = !!token;\r\n\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        cookies.remove('token');\r\n        window.location.href = \"/\";\r\n    }, []);\r\n\r\n    const loginHandler = (token, roles) => {\r\n        setToken(token);\r\n        setRoles(roles);\r\n        cookies.set('token', token);\r\n    };\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        roles: roles,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\HomePage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignInPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\Records.js",["89","90"],"import React, {useState, useEffect} from \"react\";\r\nimport RecordsTable from \"../components/Records/RecordsTable\";\r\n\r\nconst Records = () => {\r\n    const [admin, setAdmin] = useState(false);\r\n    const [user, setUser] = useState(false);\r\n    const getRole = async () => {\r\n       const data = await fetch(\"/authority\");\r\n       const dataJson = await data.json();\r\n       const roles = dataJson.map(role => role.name);\r\n        setUser(roles.includes(\"USER\"));\r\n        setAdmin(roles.includes(\"ADMIN\"));\r\n    }\r\n\r\n    useEffect(  () => {\r\n        getRole();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <RecordsTable/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Records;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddGroupPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignUpPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\Layout.js",["91","92"],"import {Fragment, useContext} from 'react';\r\n\r\nimport MainNavigation from './MainNavigation';\r\nimport AuthContext from \"../../store/auth-context\";\r\n\r\nconst Layout = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n           <MainNavigation/>\r\n            <main>{props.children}</main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddGroupForm.js",["93","94","95"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AddGroup.module.css';\r\n\r\nconst AddGroupForm = () => {\r\n    const [specialization, setSpecialization] = useState(\"ipz\");\r\n    const [degree,setDegree] = useState(\"bachelor\");\r\n    const [course,setCourse] = useState(1);\r\n    const [isLecture,setIsLecture] = useState(false);\r\n    const [groupNumber,setGroupNumber] = useState('');\r\n    const [lecturerId,setLecturerId] = useState(1);\r\n    const [lectors,setLectors] = useState([]);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const getLectors = async () => {\r\n        const data = await fetch(\"/lectors/all\");\r\n        const dataJson = await data.json();\r\n        setLectors(dataJson);\r\n    }\r\n\r\n    useEffect(  () => {\r\n        getLectors();\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //console.log(lectors);\r\n        // console.log(specialization)\r\n        // console.log(degree)\r\n        // console.log(course)\r\n        // console.log(isLecture)\r\n        // console.log(groupNumber)\r\n        // console.log(lecturerId)\r\n        // console.log(\"=================================\")\r\n        // to - do : Add validation\r\n\r\n        setIsLoading(true);\r\n\r\n\r\n       const response = await fetch(\"http://localhost:8000/group\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                isLecture,\r\n                specialization,\r\n                degree,\r\n                course,\r\n                groupNumber,\r\n                lecturerId\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n       console.log(response);\r\n       response.ok ?  alert(\"Group is added successfully.\") :  alert(\"Adding group FAILED. Status: \"+ response.status);\r\n\r\n       setSpecialization('ipz');\r\n       setDegree('bachelor');\r\n       setCourse(1);\r\n       setIsLecture(false);\r\n       setGroupNumber('');\r\n       setLecturerId(1);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Додай нову групу тут</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='specialization'>Спеціальність</label>\r\n                    <select name=\"specialization\" id=\"specialization\"   onChange={e => setSpecialization(e.target.value)} >\r\n                        <option key={\"ipz\"} value={'ipz'}>ІПЗ</option>\r\n                        <option key={\"kn\"} value={'kn'}>КН</option>\r\n                        <option key={\"pm\"} value={'pm'}>ПМ</option>\r\n                    </select>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='degree'>Ступінь</label>\r\n                    <select name=\"degree\" id=\"degree\" onChange={e => setDegree(e.target.value)} >\r\n                        <option key={\"bachelor\"} value={'bachelor'}>Бакалавр</option>\r\n                        <option key={\"master\"} value={'master'}>Магістр</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor='course'>Курс</label>\r\n                    <select name=\"course\" defaultValue={1} id=\"course\" onChange={e => setCourse(e.target.value)} >\r\n                        <option key={1} value={1}>1</option>\r\n                        <option key={2} value={2}>2</option>\r\n                        <option key={3} value={3}>3</option>\r\n                        <option key={4} value={4}>4</option>\r\n                        <option key={5} value={5}>5</option>\r\n                        <option key={6} value={6}>6</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-check\" style={{display: \"inline-block\"}}>\r\n                    <input name=\"isLecture\" onChange={e => setIsLecture(e.target.checked)} className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"isLecture\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"groupNumber\" id=\"groupNumber\" type=\"number\" onChange={e => setGroupNumber(e.target.value)} placeholder=\"Номер групи\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor='lector'>Лектор</label>\r\n                    <select name=\"lector\" id=\"lector\" onChange={e => setLecturerId(e.target.value)}>\r\n                        {(lectors || []).map(lector => (\r\n                            <option value={lector.lecturerId} key={lector.lecturerId}>\r\n                                {lector.surname + ' ' + lector.name + ' '+ lector.middlename}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити групу</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddGroupForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignUpForm.js",["96"],"import { useState, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport classes from './AuthForm.module.css';\r\n\r\nconst SignUpForm = () => {\r\n    const history = useHistory();\r\n    const emailInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n    const usernameInputRef = useRef();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredEmail = emailInputRef.current.value;\r\n        const enteredPassword = passwordInputRef.current.value;\r\n        const enteredUsername = usernameInputRef.current.value;\r\n        // to - do: Add validation\r\n\r\n        setIsLoading(true);\r\n        fetch(\"http://localhost:8000/sign-up\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: enteredEmail,\r\n                password: enteredPassword,\r\n                username:enteredUsername,\r\n                returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                if (res.ok) {\r\n                    history.replace('/sign-in');\r\n                } else {\r\n                    return res.json().then((data) => {\r\n                        let errorMessage = 'Authentication failed!';\r\n                        throw new Error(errorMessage);\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Sign up</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='username'>Your Username</label>\r\n                    <input type='text' id='username' required ref={usernameInputRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='email'>Your Email</label>\r\n                    <input type='email' id='email' required ref={emailInputRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='password'>Your Password</label>\r\n                    <input\r\n                        type='password'\r\n                        id='password'\r\n                        required\r\n                        ref={passwordInputRef}\r\n                    />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Sign up</button>\r\n                    )}\r\n                    {isLoading && <p>Sending request...</p>}\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignInForm.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddDisciplinePage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddDisciplineForm.js",["97","98"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AddGroup.module.css';\r\n\r\nconst AddDisciplineForm = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [lectors,setLectors] = useState([]);\r\n    const [lecturerId,setLecturerId] = useState(1);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const getLectors = async () => {\r\n        const data = await fetch(\"/lectors/all\");\r\n        const dataJson = await data.json();\r\n        setLectors(dataJson);\r\n    }\r\n\r\n    useEffect(  () => {\r\n        getLectors();\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(name);\r\n        console.log(lectors);\r\n        console.log(lecturerId)\r\n\r\n        // to - do : Add validation\r\n\r\n        setIsLoading(true);\r\n\r\n\r\n        const response = await fetch(\"http://localhost:8000/disciplines\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n              name,\r\n                lecturerId\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        response.ok ?  alert(\"Group is added successfully.\") :  alert(\"Adding group FAILED. Status: \"+ response.status);\r\n\r\n        setName('');\r\n        setLecturerId(1);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Додай нову дисципліну тут</h1>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea type=\"text\" name=\"name\" id=\"name\" placeholder=\"Назва\" className=\"form-control\" onChange={e => setName(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor='lector'>Лектор</label>\r\n                    <select name=\"lector\" id=\"lector\" onChange={e => setLecturerId(e.target.value)}>\r\n                        {(lectors || []).map(lector => (\r\n                            <option value={lector.lecturerId} key={lector.lecturerId}>\r\n                                {lector.surname + ' ' + lector.name + ' '+ lector.middlename}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити групу</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddDisciplineForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddRecordPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddRecordForm.js",["99"],"import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../Auth/AuthForm.module.css';\r\nimport {getAllClassrooms, getAllClassTimes, getAllDisciplines, getAllGroups, getAllLectors} from \"../../hooks/getData\";\r\n\r\nconst AddRecordForm = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [disciplines, setDisciplines] = useState([]);\r\n    const [disciplineId, setDisciplineSelected] = useState(1);\r\n    const [lectors, setLectors] = useState([]);\r\n    const [lecturerId, setLectorSelected] = useState(1);\r\n    const [groups, setGroups] = useState([]);\r\n    const [groupId, setGroupSelected] = useState(1);\r\n    const [classtimes, setClasstimes] = useState([]);\r\n    const [classTimeId, setClasstimeSelected] = useState(1);\r\n    const [classrooms, setClassrooms] = useState([]);\r\n    const [classroomId, setClassroomSelected] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setDisciplines(await getAllDisciplines());\r\n            setGroups(await getAllGroups());\r\n            setClassrooms(await getAllClassrooms());\r\n            setClasstimes(await getAllClassTimes());\r\n            setLectors(await getAllLectors());\r\n        };\r\n        fetchData();\r\n        // console.log(lectors)\r\n        // console.log(disciplines)\r\n    }, []);\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        console.log(disciplineId, \"HEERE\")\r\n        const response = await fetch(\"/records\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                disciplineId,\r\n                classTimeId,\r\n                groupId,\r\n                classroomId,\r\n                lecturerId,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        response.ok ?  alert(\"Record is added successfully.\") :  alert(\"Adding record FAILED. Status: \"+ response.status);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Запис в розкладі</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <select className={classes.control} name=\"disciplineId\" id=\"disciplineId\"\r\n                        onChange={e => setDisciplineSelected(e.target.value)}>\r\n                    {(disciplines || []).map(i => (\r\n                        <option value={i.disciplineId} key={i.disciplineId}>\r\n                            {i.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select className={classes.control} name=\"classTimeId\" id=\"classTimeId\" onChange={e => setClasstimeSelected(e.target.value)}>\r\n                    {(classtimes || []).map(i => (\r\n                        <option value={i.classTimeId} key={i.classTimeId}>\r\n                            {i.classTime}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select className={classes.control} name=\"groupId\" id=\"groupId\" onChange={e => setGroupSelected(e.target.value)}>\r\n                    {(groups || []).map(i => (\r\n                        <option value={i.groupId} key={i.groupId}>\r\n                            {i.groupNumber}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select className={classes.control} name=\"classroomId\" id=\"classroomId\" onChange={e => setClassroomSelected(e.target.value)}>\r\n                    {(classrooms || []).map(i => (\r\n                        <option value={i.classroomId} key={i.classroomId}>\r\n                            {i.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select className={classes.control} name=\"lecturerId\" id=\"lecturerId\" onChange={e => setLectorSelected(e.target.value)}>\r\n                    {(lectors || []).map(i => (\r\n                        <option value={i.lecturerId} key={i.lecturerId}>\r\n                            {i.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити запис</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddRecordForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Records\\RecordsTable.js",["100","101","102","103","104","105","106","107","108","109"],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\hooks\\getData.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":25,"column":11,"nodeType":"116","messageId":"117","endLine":25,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":5,"column":12,"nodeType":"116","messageId":"117","endLine":5,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":6,"column":12,"nodeType":"116","messageId":"117","endLine":6,"endColumn":16},{"ruleId":"114","severity":1,"message":"120","line":1,"column":19,"nodeType":"116","messageId":"117","endLine":1,"endColumn":29},{"ruleId":"114","severity":1,"message":"121","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":19},{"ruleId":"114","severity":1,"message":"122","line":1,"column":19,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"123","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":20},{"ruleId":"114","severity":1,"message":"124","line":15,"column":11,"nodeType":"116","messageId":"117","endLine":15,"endColumn":18},{"ruleId":"114","severity":1,"message":"120","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":38},{"ruleId":"114","severity":1,"message":"122","line":1,"column":19,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"124","line":11,"column":11,"nodeType":"116","messageId":"117","endLine":11,"endColumn":18},{"ruleId":"114","severity":1,"message":"123","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":20},{"ruleId":"114","severity":1,"message":"122","line":1,"column":19,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"120","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":37},{"ruleId":"114","severity":1,"message":"125","line":9,"column":12,"nodeType":"116","messageId":"117","endLine":9,"endColumn":19},{"ruleId":"114","severity":1,"message":"126","line":9,"column":21,"nodeType":"116","messageId":"117","endLine":9,"endColumn":31},{"ruleId":"114","severity":1,"message":"127","line":10,"column":12,"nodeType":"116","messageId":"117","endLine":10,"endColumn":20},{"ruleId":"114","severity":1,"message":"128","line":10,"column":22,"nodeType":"116","messageId":"117","endLine":10,"endColumn":33},{"ruleId":"114","severity":1,"message":"129","line":11,"column":12,"nodeType":"116","messageId":"117","endLine":11,"endColumn":16},{"ruleId":"114","severity":1,"message":"130","line":11,"column":18,"nodeType":"116","messageId":"117","endLine":11,"endColumn":25},{"ruleId":"114","severity":1,"message":"131","line":17,"column":27,"nodeType":"116","messageId":"117","endLine":17,"endColumn":43},{"ruleId":"132","severity":1,"message":"133","line":62,"column":8,"nodeType":"134","endLine":62,"endColumn":24,"suggestions":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'admin' is assigned a value but never used.","'user' is assigned a value but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'useRef' is defined but never used.","'useHistory' is defined but never used.","'authCtx' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'sort' is assigned a value but never used.","'setSort' is assigned a value but never used.","'setFilterByGroup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [fetchData, filterByLector]",{"range":"141","text":"142"},[2160,2176],"[fetchData, filterByLector]"]