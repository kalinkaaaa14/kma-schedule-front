[{"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\index.js":"1","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\App.js":"2","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\store\\auth-context.js":"3","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\HomePage.js":"4","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignInPage.js":"5","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\Records.js":"6","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddGroupPage.js":"7","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignUpPage.js":"8","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\Layout.js":"9","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddGroupForm.js":"10","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignUpForm.js":"11","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignInForm.js":"12","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\MainNavigation.js":"13","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddDisciplinePage.js":"14","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddDisciplineForm.js":"15","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddRecordPage.js":"16","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddRecordForm.js":"17","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Records\\RecordsTable.js":"18","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\hooks\\getData.js":"19","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddClassroomPage.js":"20","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddLecturerPage.js":"21","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddClassTimeForm.js":"22","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddLecturerForm.js":"23","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddClassroomForm.js":"24"},{"size":385,"mtime":1639000537729,"results":"25","hashOfConfig":"26"},{"size":2094,"mtime":1639091803806,"results":"27","hashOfConfig":"26"},{"size":1510,"mtime":1639000537732,"results":"28","hashOfConfig":"26"},{"size":113,"mtime":1639000537730,"results":"29","hashOfConfig":"26"},{"size":174,"mtime":1639000537731,"results":"30","hashOfConfig":"26"},{"size":672,"mtime":1639084395583,"results":"31","hashOfConfig":"26"},{"size":185,"mtime":1639000827087,"results":"32","hashOfConfig":"26"},{"size":174,"mtime":1639000537731,"results":"33","hashOfConfig":"26"},{"size":280,"mtime":1639091803813,"results":"34","hashOfConfig":"26"},{"size":6515,"mtime":1639092432637,"results":"35","hashOfConfig":"26"},{"size":2912,"mtime":1639000537724,"results":"36","hashOfConfig":"26"},{"size":2929,"mtime":1639091803808,"results":"37","hashOfConfig":"26"},{"size":3007,"mtime":1639091803814,"results":"38","hashOfConfig":"26"},{"size":212,"mtime":1639008654445,"results":"39","hashOfConfig":"26"},{"size":4239,"mtime":1639092432636,"results":"40","hashOfConfig":"26"},{"size":191,"mtime":1639010062975,"results":"41","hashOfConfig":"26"},{"size":5824,"mtime":1639091803812,"results":"42","hashOfConfig":"26"},{"size":5796,"mtime":1639093985249,"results":"43","hashOfConfig":"26"},{"size":671,"mtime":1639010062974,"results":"44","hashOfConfig":"26"},{"size":205,"mtime":1639091803817,"results":"45","hashOfConfig":"26"},{"size":200,"mtime":1639091803817,"results":"46","hashOfConfig":"26"},{"size":4198,"mtime":1639091803809,"results":"47","hashOfConfig":"26"},{"size":2601,"mtime":1639091803812,"results":"48","hashOfConfig":"26"},{"size":2260,"mtime":1639091803809,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"oo74vn",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\index.js",[],["107","108"],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\App.js",["109"],"import { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout/Layout';\r\nimport HomePage from './pages/HomePage';\r\nimport AuthContext from './store/auth-context';\r\nimport SignUpPage from \"./pages/SignUpPage\";\r\nimport SignInPage from \"./pages/SignInPage\";\r\nimport Records from \"./pages/Records\";\r\nimport AddRecordPage from \"./pages/AddRecordPage\";\r\nimport AddGroupPage from \"./pages/AddGroupPage\";\r\nimport AddDisciplinePage from \"./pages/AddDisciplinePage\";\r\nimport AddLecturerPage from \"./pages/AddLecturerPage\";\r\nimport AddClassroomPage from \"./pages/AddClassroomPage\";\r\nimport AddClassTimeForm from \"./components/Forms/AddClassTimeForm\";\r\n\r\nfunction App() {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  return (\r\n      <Layout>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <HomePage />\r\n          </Route>\r\n            <Route path='/records' exact>\r\n                <Records />\r\n            </Route>\r\n            <Route path='/disciplines' exact>\r\n                <AddDisciplinePage />\r\n            </Route>\r\n            <Route path='/group/add' exact>\r\n                <AddGroupPage />\r\n            </Route>\r\n            <Route path='/lectors/add' exact>\r\n                <AddLecturerPage />\r\n            </Route>\r\n            <Route path='/classroom/add' exact>\r\n                <AddClassroomPage />\r\n            </Route>\r\n            <Route path='/classtime/add' exact>\r\n                <AddClassroomPage />\r\n            </Route>\r\n          {!authCtx.isLoggedIn && (\r\n              <Route path='/sign-in'>\r\n                <SignInPage/>\r\n              </Route>\r\n          )}\r\n            {!authCtx.isLoggedIn && (\r\n                <Route path='/sign-up'>\r\n                   <SignUpPage/>\r\n                </Route>\r\n            )}\r\n                <Route path='/records/add'>\r\n                    <AddRecordPage/>\r\n                </Route>\r\n          <Route path='*'>\r\n            <Redirect to='/' />\r\n          </Route>\r\n        </Switch>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\store\\auth-context.js",["110"],"import React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    roles: [],\r\n    login: (token) => {},\r\n    logout: () => {},\r\n});\r\n\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = cookies.get('token');\r\n\r\n    return {\r\n        token: storedToken\r\n    };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const history = useHistory();\r\n    const tokenData = retrieveStoredToken().token;\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    }\r\n\r\n    const [token, setToken] = useState(initialToken);\r\n    const [roles, setRoles] = useState([]);\r\n    const userIsLoggedIn = !!token;\r\n\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        cookies.remove('token');\r\n        window.location.href = \"/\";\r\n    }, []);\r\n\r\n    const loginHandler = (token, roles) => {\r\n        setToken(token);\r\n        setRoles(roles);\r\n        cookies.set('token', token);\r\n    };\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        roles: roles,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\HomePage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignInPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\Records.js",["111","112"],"import React, {useState, useEffect} from \"react\";\r\nimport RecordsTable from \"../components/Records/RecordsTable\";\r\n\r\nconst Records = () => {\r\n    const [admin, setAdmin] = useState(false);\r\n    const [user, setUser] = useState(false);\r\n    const getRole = async () => {\r\n       const data = await fetch(\"/authority\");\r\n       const dataJson = await data.json();\r\n       const roles = dataJson.map(role => role.name);\r\n        setUser(roles.includes(\"USER\"));\r\n        setAdmin(roles.includes(\"ADMIN\"));\r\n    }\r\n\r\n    useEffect(  () => {\r\n        getRole();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <RecordsTable/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Records;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddGroupPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\SignUpPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddGroupForm.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignUpForm.js",["113"],"import { useState, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport classes from './AuthForm.module.css';\r\n\r\nconst SignUpForm = () => {\r\n    const history = useHistory();\r\n    const emailInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n    const usernameInputRef = useRef();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredEmail = emailInputRef.current.value;\r\n        const enteredPassword = passwordInputRef.current.value;\r\n        const enteredUsername = usernameInputRef.current.value;\r\n        // to - do: Add validation\r\n\r\n        setIsLoading(true);\r\n        fetch(\"http://localhost:8000/sign-up\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: enteredEmail,\r\n                password: enteredPassword,\r\n                username:enteredUsername,\r\n                returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                if (res.ok) {\r\n                    history.replace('/sign-in');\r\n                } else {\r\n                    return res.json().then((data) => {\r\n                        let errorMessage = 'Authentication failed!';\r\n                        throw new Error(errorMessage);\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Sign up</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='username'>Your Username</label>\r\n                    <input type='text' id='username' required ref={usernameInputRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='email'>Your Email</label>\r\n                    <input type='email' id='email' required ref={emailInputRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='password'>Your Password</label>\r\n                    <input\r\n                        type='password'\r\n                        id='password'\r\n                        required\r\n                        ref={passwordInputRef}\r\n                    />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Sign up</button>\r\n                    )}\r\n                    {isLoading && <p>Sending request...</p>}\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Auth\\SignInForm.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddDisciplinePage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddDisciplineForm.js",["114"],"import {useState, useEffect} from 'react';\r\nimport classes from '../Auth/AuthForm.module.css';\r\n\r\nconst AddDisciplineForm = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [lectors,setLectors] = useState([]);\r\n    const [lecturerId, setLecturerId] = useState(1);\r\n    const [disciplines, setDisciplines] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const getLectors = async () => {\r\n        const data = await fetch(\"/lectors/all\");\r\n        const dataJson = await data.json();\r\n        setLectors(dataJson);\r\n    }\r\n    const getDisciplines = async () => {\r\n        const data = await fetch(\"/disciplines\");\r\n        const dataJson = await data.json();\r\n        setDisciplines(dataJson);\r\n    }\r\n\r\n    const deleteDiscipline = async (id) => {\r\n        const response = await fetch(\"/disciplines/\"+id, {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        response.ok ?  alert(\"Дисципліна успішно видалена.\") :  alert(\"Дисципліну не було видалено. Status: \"+ response.status);\r\n    }\r\n\r\n    useEffect(  () => {\r\n        getLectors();\r\n        getDisciplines();\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"/disciplines\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n              name,\r\n                lecturerId\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        response.ok ?  alert(\"Дисципліна успішно додано.\") :  alert(\"Дисципліну не було додано. Status: \"+ response.status);\r\n        getDisciplines();\r\n        setName('');\r\n        setLecturerId(1);\r\n        setIsLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <section className={classes.auth}>\r\n                <h1>Додай нову дисципліну тут</h1>\r\n                <form onSubmit={submitHandler}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea type=\"text\" name=\"name\" id=\"name\" placeholder=\"Назва\" className=\"form-control\" onChange={e => setName(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className={classes.control}>\r\n                        <label htmlFor='lector'>Лектор</label>\r\n                        <select name=\"lector\" id=\"lector\" onChange={e => setLecturerId(e.target.value)}>\r\n                            {(lectors || []).map(lector => (\r\n                                <option value={lector.lecturerId} key={lector.lecturerId}>\r\n                                    {lector.surname + ' ' + lector.name + ' '+ lector.middlename}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className={classes.actions}>\r\n                        {!isLoading && (\r\n                            <button>Створити групу</button>\r\n                        )}\r\n                        {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                    </div>\r\n                </form>\r\n            </section>\r\n            <section className={classes.tableWrapper}>\r\n                <table className={classes.disciplineTable}>\r\n                    <tr>\r\n                        <th>Предмет</th>\r\n                        <th>Лектор</th>\r\n                    </tr>\r\n                    {(disciplines || []).map(i => (\r\n                        <tr key={i.disciplineId}>\r\n                            <td>{i.name}</td>\r\n                            <td>{lectors.filter(l => l.lecturerId === i.lecturerId).map(l => (l.surname + ' ' + l.name + ' '+ l.middlename))}</td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddDisciplineForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddRecordPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddRecordForm.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Records\\RecordsTable.js",["115","116","117","118","119","120","121","122","123","124"],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\hooks\\getData.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddClassroomPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\pages\\AddLecturerPage.js",[],"C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddClassTimeForm.js",["125","126","127"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AddGroup.module.css';\r\n\r\nconst AddClassTimeForm = () => {\r\n    const [weekDay, setWeekDay] = useState(\"\");\r\n    const [classTime,setClassTime] = useState(\"\");\r\n    const [weekNumber,setWeekNumber] = useState(0);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(  () => {\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"/classtime\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                weekDay,\r\n                classTime,\r\n                weekNumber\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        response.ok ?  alert(\"Час додано успішно.\") :  alert(\"Час не було додано. Статус: \"+ response.status);\r\n\r\n        setWeekDay('');\r\n        setClassTime('');\r\n        setWeekNumber(0);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Додай новий час</h1>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"classTime\" id=\"classTime\" type=\"text\" onChange={e => setClassTime(e.target.value)} placeholder=\"08:30:00\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor='weekDay'>День тижня</label>\r\n                    <select name=\"weekDay\" id=\"weekDay\"   onChange={e => setWeekDay(e.target.value)} >\r\n                        <option key={\"MONDAY\"} value={'MONDAY'}>понеділок</option>\r\n                        <option key={\"TUESDAY\"} value={'TUESDAY'}>вівторок</option>\r\n                        <option key={\"WEDNESDAY\"} value={'WEDNESDAY'}>середа</option>\r\n                        <option key={\"THURSDAY\"} value={'THURSDAY'}>четвер</option>\r\n                        <option key={\"FRIDAY\"} value={'FRIDAY'}>п'ятниця</option>\r\n                        <option key={\"SATURDAY\"} value={'SATURDAY'}>субота</option>\r\n                        <option key={\"SUNDAY\"} value={'SUNDAY'}>неділя</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor='weekNumber'>Тиждень</label>\r\n                    <select name=\"weekNumber\" defaultValue={1} id=\"weekNumber\" onChange={e => setWeekNumber(Number.parseInt(e.target.value))} >\r\n                        <option key={1} value={1}>1</option>\r\n                        <option key={2} value={2}>2</option>\r\n                        <option key={3} value={3}>3</option>\r\n                        <option key={4} value={4}>4</option>\r\n                        <option key={5} value={5}>5</option>\r\n                        <option key={6} value={6}>6</option>\r\n                        <option key={7} value={7}>7</option>\r\n                        <option key={8} value={8}>8</option>\r\n                        <option key={9} value={9}>9</option>\r\n                        <option key={10} value={10}>10</option>\r\n                        <option key={11} value={11}>11</option>\r\n                        <option key={12} value={12}>12</option>\r\n                        <option key={13} value={13}>13</option>\r\n                        <option key={14} value={14}>14</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити час</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddClassTimeForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddLecturerForm.js",["128","129","130"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AddGroup.module.css';\r\n\r\nconst AddLecturerForm = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [surname,setSurname] = useState(\"\");\r\n    const [middlename,setMiddlename] = useState(\"\");\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(  () => {\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n\r\n        const response = await fetch(\"/lectors\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                name,\r\n                surname,\r\n                middlename\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        response.ok ?  alert(\"Лектора додано успішно.\") :  alert(\"Лектора не було додано. Статус: \"+ response.status);\r\n\r\n        setName('');\r\n        setMiddlename('');\r\n        setSurname('');\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Додай нового лектора тут</h1>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"lectorName\" id=\"lectorName\" type=\"text\" onChange={e => setName(e.target.value)} placeholder=\"Ім'я\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"lectorSurname\" id=\"lectorSurname\" type=\"text\" onChange={e => setSurname(e.target.value)} placeholder=\"Прізвище\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"lectorMiddlenae\" id=\"lectorMiddlenae\" type=\"text\" onChange={e => setMiddlename(e.target.value)} placeholder=\"По-батькові\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити лектора</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddLecturerForm;","C:\\Users\\Kupchyk\\WebstormProjects\\kma-schedule-front-new\\src\\components\\Forms\\AddClassroomForm.js",["131","132","133"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AddGroup.module.css';\r\n\r\nconst AddClassroomForm = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [capacity,setCapacity] = useState(0);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(  () => {\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"/classroom\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                name,\r\n                capacity\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        response.ok ?  alert(\"Аудиторію додано успішно.\") :  alert(\"Аудиторію не було додано. Статус: \"+ response.status);\r\n\r\n        setName('');\r\n        setCapacity(0);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Додай нову аудиторію тут</h1>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"roomName\" id=\"roomName\" type=\"text\" onChange={e => setName(e.target.value)} placeholder=\"Номер\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"roomCapacity\" id=\"roomCapacity\" type=\"number\" onChange={e => setCapacity(Number.parseInt(e.target.value))} placeholder=\"Місткість\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити аудиторію</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddClassroomForm;",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":15,"column":8,"nodeType":"140","messageId":"141","endLine":15,"endColumn":24},{"ruleId":"138","severity":1,"message":"142","line":25,"column":11,"nodeType":"140","messageId":"141","endLine":25,"endColumn":18},{"ruleId":"138","severity":1,"message":"143","line":5,"column":12,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"144","line":6,"column":12,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"138","severity":1,"message":"145","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"138","severity":1,"message":"146","line":23,"column":11,"nodeType":"140","messageId":"141","endLine":23,"endColumn":27},{"ruleId":"138","severity":1,"message":"147","line":1,"column":19,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"145","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":37},{"ruleId":"138","severity":1,"message":"148","line":9,"column":12,"nodeType":"140","messageId":"141","endLine":9,"endColumn":19},{"ruleId":"138","severity":1,"message":"149","line":9,"column":21,"nodeType":"140","messageId":"141","endLine":9,"endColumn":31},{"ruleId":"138","severity":1,"message":"150","line":10,"column":12,"nodeType":"140","messageId":"141","endLine":10,"endColumn":20},{"ruleId":"138","severity":1,"message":"151","line":10,"column":22,"nodeType":"140","messageId":"141","endLine":10,"endColumn":33},{"ruleId":"138","severity":1,"message":"152","line":11,"column":12,"nodeType":"140","messageId":"141","endLine":11,"endColumn":16},{"ruleId":"138","severity":1,"message":"153","line":11,"column":18,"nodeType":"140","messageId":"141","endLine":11,"endColumn":25},{"ruleId":"138","severity":1,"message":"154","line":17,"column":27,"nodeType":"140","messageId":"141","endLine":17,"endColumn":43},{"ruleId":"155","severity":1,"message":"156","line":74,"column":8,"nodeType":"157","endLine":74,"endColumn":43,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"147","line":1,"column":19,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"159","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"160","line":11,"column":11,"nodeType":"140","messageId":"141","endLine":11,"endColumn":18},{"ruleId":"138","severity":1,"message":"147","line":1,"column":19,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"159","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"160","line":11,"column":11,"nodeType":"140","messageId":"141","endLine":11,"endColumn":18},{"ruleId":"138","severity":1,"message":"147","line":1,"column":19,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"159","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"160","line":10,"column":11,"nodeType":"140","messageId":"141","endLine":10,"endColumn":18},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'AddClassTimeForm' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'admin' is assigned a value but never used.","'user' is assigned a value but never used.","'useContext' is defined but never used.","'deleteDiscipline' is assigned a value but never used.","'useRef' is defined but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'sort' is assigned a value but never used.","'setSort' is assigned a value but never used.","'setFilterByGroup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'useHistory' is defined but never used.","'authCtx' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [filterByLector, filterByDiscipline, fetchData]",{"range":"166","text":"167"},[2474,2509],"[filterByLector, filterByDiscipline, fetchData]"]