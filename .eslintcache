[{"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\index.js":"1","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\App.js":"2","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\store\\auth-context.js":"3","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddRecordPage.js":"4","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\HomePage.js":"5","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\SignInPage.js":"6","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddGroupPage.js":"7","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddClassroomPage.js":"8","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddLecturerPage.js":"9","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\SignUpPage.js":"10","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddDisciplinePage.js":"11","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddClassTimeForm.js":"12","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Layout\\Layout.js":"13","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\Records.js":"14","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddRecordForm.js":"15","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddClassroomForm.js":"16","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddDisciplineForm.js":"17","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddLecturerForm.js":"18","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Auth\\SignInForm.js":"19","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Auth\\SignUpForm.js":"20","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Layout\\MainNavigation.js":"21","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddGroupForm.js":"22","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Records\\RecordsTable.js":"23","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\hooks\\getData.js":"24","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddClassTimePage.js":"25"},{"size":385,"mtime":1638730954585,"results":"26","hashOfConfig":"27"},{"size":2152,"mtime":1639094029506,"results":"28","hashOfConfig":"27"},{"size":1510,"mtime":1639000916448,"results":"29","hashOfConfig":"27"},{"size":191,"mtime":1639004989525,"results":"30","hashOfConfig":"27"},{"size":113,"mtime":1638997433828,"results":"31","hashOfConfig":"27"},{"size":174,"mtime":1638730954589,"results":"32","hashOfConfig":"27"},{"size":185,"mtime":1639080629484,"results":"33","hashOfConfig":"27"},{"size":205,"mtime":1639090873507,"results":"34","hashOfConfig":"27"},{"size":200,"mtime":1639090873509,"results":"35","hashOfConfig":"27"},{"size":174,"mtime":1638730954590,"results":"36","hashOfConfig":"27"},{"size":212,"mtime":1639080629482,"results":"37","hashOfConfig":"27"},{"size":4198,"mtime":1639090873502,"results":"38","hashOfConfig":"27"},{"size":280,"mtime":1639082123420,"results":"39","hashOfConfig":"27"},{"size":672,"mtime":1639092278273,"results":"40","hashOfConfig":"27"},{"size":5824,"mtime":1639085542905,"results":"41","hashOfConfig":"27"},{"size":3273,"mtime":1639093941381,"results":"42","hashOfConfig":"27"},{"size":4239,"mtime":1639091872649,"results":"43","hashOfConfig":"27"},{"size":2601,"mtime":1639090873505,"results":"44","hashOfConfig":"27"},{"size":2966,"mtime":1639093116713,"results":"45","hashOfConfig":"27"},{"size":2985,"mtime":1639093116722,"results":"46","hashOfConfig":"27"},{"size":3019,"mtime":1639093813721,"results":"47","hashOfConfig":"27"},{"size":6515,"mtime":1639092208223,"results":"48","hashOfConfig":"27"},{"size":5631,"mtime":1639092611702,"results":"49","hashOfConfig":"27"},{"size":671,"mtime":1639006860457,"results":"50","hashOfConfig":"27"},{"size":205,"mtime":1639090873506,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"7nhogh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\index.js",[],["110","111"],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\App.js",["112"],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\store\\auth-context.js",["113"],"import React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    roles: [],\r\n    login: (token) => {},\r\n    logout: () => {},\r\n});\r\n\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = cookies.get('token');\r\n\r\n    return {\r\n        token: storedToken\r\n    };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const history = useHistory();\r\n    const tokenData = retrieveStoredToken().token;\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    }\r\n\r\n    const [token, setToken] = useState(initialToken);\r\n    const [roles, setRoles] = useState([]);\r\n    const userIsLoggedIn = !!token;\r\n\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        cookies.remove('token');\r\n        window.location.href = \"/\";\r\n    }, []);\r\n\r\n    const loginHandler = (token, roles) => {\r\n        setToken(token);\r\n        setRoles(roles);\r\n        cookies.set('token', token);\r\n    };\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        roles: roles,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddRecordPage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\HomePage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\SignInPage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddGroupPage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddClassroomPage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddLecturerPage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\SignUpPage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddDisciplinePage.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddClassTimeForm.js",["114","115","116"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AddGroup.module.css';\r\n\r\nconst AddClassTimeForm = () => {\r\n    const [weekDay, setWeekDay] = useState(\"\");\r\n    const [classTime,setClassTime] = useState(\"\");\r\n    const [weekNumber,setWeekNumber] = useState(0);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(  () => {\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"/classtime\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                weekDay,\r\n                classTime,\r\n                weekNumber\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        response.ok ?  alert(\"Час додано успішно.\") :  alert(\"Час не було додано. Статус: \"+ response.status);\r\n\r\n        setWeekDay('');\r\n        setClassTime('');\r\n        setWeekNumber(0);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Додай новий час</h1>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"classTime\" id=\"classTime\" type=\"text\" onChange={e => setClassTime(e.target.value)} placeholder=\"08:30:00\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor='weekDay'>День тижня</label>\r\n                    <select name=\"weekDay\" id=\"weekDay\"   onChange={e => setWeekDay(e.target.value)} >\r\n                        <option key={\"MONDAY\"} value={'MONDAY'}>понеділок</option>\r\n                        <option key={\"TUESDAY\"} value={'TUESDAY'}>вівторок</option>\r\n                        <option key={\"WEDNESDAY\"} value={'WEDNESDAY'}>середа</option>\r\n                        <option key={\"THURSDAY\"} value={'THURSDAY'}>четвер</option>\r\n                        <option key={\"FRIDAY\"} value={'FRIDAY'}>п'ятниця</option>\r\n                        <option key={\"SATURDAY\"} value={'SATURDAY'}>субота</option>\r\n                        <option key={\"SUNDAY\"} value={'SUNDAY'}>неділя</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                    <label htmlFor='weekNumber'>Тиждень</label>\r\n                    <select name=\"weekNumber\" defaultValue={1} id=\"weekNumber\" onChange={e => setWeekNumber(Number.parseInt(e.target.value))} >\r\n                        <option key={1} value={1}>1</option>\r\n                        <option key={2} value={2}>2</option>\r\n                        <option key={3} value={3}>3</option>\r\n                        <option key={4} value={4}>4</option>\r\n                        <option key={5} value={5}>5</option>\r\n                        <option key={6} value={6}>6</option>\r\n                        <option key={7} value={7}>7</option>\r\n                        <option key={8} value={8}>8</option>\r\n                        <option key={9} value={9}>9</option>\r\n                        <option key={10} value={10}>10</option>\r\n                        <option key={11} value={11}>11</option>\r\n                        <option key={12} value={12}>12</option>\r\n                        <option key={13} value={13}>13</option>\r\n                        <option key={14} value={14}>14</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити час</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddClassTimeForm;","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\Records.js",["117","118"],"import React, {useState, useEffect} from \"react\";\r\nimport RecordsTable from \"../components/Records/RecordsTable\";\r\n\r\nconst Records = () => {\r\n    const [admin, setAdmin] = useState(false);\r\n    const [user, setUser] = useState(false);\r\n    const getRole = async () => {\r\n       const data = await fetch(\"/authority\");\r\n       const dataJson = await data.json();\r\n       const roles = dataJson.map(role => role.name);\r\n        setUser(roles.includes(\"USER\"));\r\n        setAdmin(roles.includes(\"ADMIN\"));\r\n    }\r\n\r\n    useEffect(  () => {\r\n        getRole();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <RecordsTable/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Records;","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddRecordForm.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddClassroomForm.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddDisciplineForm.js",["119"],"import {useState, useEffect} from 'react';\r\nimport classes from '../Auth/AuthForm.module.css';\r\n\r\nconst AddDisciplineForm = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [lectors,setLectors] = useState([]);\r\n    const [lecturerId, setLecturerId] = useState(1);\r\n    const [disciplines, setDisciplines] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const getLectors = async () => {\r\n        const data = await fetch(\"/lectors/all\");\r\n        const dataJson = await data.json();\r\n        setLectors(dataJson);\r\n    }\r\n    const getDisciplines = async () => {\r\n        const data = await fetch(\"/disciplines\");\r\n        const dataJson = await data.json();\r\n        setDisciplines(dataJson);\r\n    }\r\n\r\n    const deleteDiscipline = async (id) => {\r\n        const response = await fetch(\"/disciplines/\"+id, {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        response.ok ?  alert(\"Дисципліна успішно видалена.\") :  alert(\"Дисципліну не було видалено. Status: \"+ response.status);\r\n    }\r\n\r\n    useEffect(  () => {\r\n        getLectors();\r\n        getDisciplines();\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"/disciplines\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n              name,\r\n                lecturerId\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        response.ok ?  alert(\"Дисципліна успішно додано.\") :  alert(\"Дисципліну не було додано. Status: \"+ response.status);\r\n        getDisciplines();\r\n        setName('');\r\n        setLecturerId(1);\r\n        setIsLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <section className={classes.auth}>\r\n                <h1>Додай нову дисципліну тут</h1>\r\n                <form onSubmit={submitHandler}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea type=\"text\" name=\"name\" id=\"name\" placeholder=\"Назва\" className=\"form-control\" onChange={e => setName(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className={classes.control}>\r\n                        <label htmlFor='lector'>Лектор</label>\r\n                        <select name=\"lector\" id=\"lector\" onChange={e => setLecturerId(e.target.value)}>\r\n                            {(lectors || []).map(lector => (\r\n                                <option value={lector.lecturerId} key={lector.lecturerId}>\r\n                                    {lector.surname + ' ' + lector.name + ' '+ lector.middlename}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className={classes.actions}>\r\n                        {!isLoading && (\r\n                            <button>Створити групу</button>\r\n                        )}\r\n                        {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                    </div>\r\n                </form>\r\n            </section>\r\n            <section className={classes.tableWrapper}>\r\n                <table className={classes.disciplineTable}>\r\n                    <tr>\r\n                        <th>Предмет</th>\r\n                        <th>Лектор</th>\r\n                    </tr>\r\n                    {(disciplines || []).map(i => (\r\n                        <tr key={i.disciplineId}>\r\n                            <td>{i.name}</td>\r\n                            <td>{lectors.filter(l => l.lecturerId === i.lecturerId).map(l => (l.surname + ' ' + l.name + ' '+ l.middlename))}</td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddDisciplineForm;","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddLecturerForm.js",["120","121","122"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AddGroup.module.css';\r\n\r\nconst AddLecturerForm = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [surname,setSurname] = useState(\"\");\r\n    const [middlename,setMiddlename] = useState(\"\");\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(  () => {\r\n    }, [])\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n\r\n        const response = await fetch(\"/lectors\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body: JSON.stringify({\r\n                name,\r\n                surname,\r\n                middlename\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        response.ok ?  alert(\"Лектора додано успішно.\") :  alert(\"Лектора не було додано. Статус: \"+ response.status);\r\n\r\n        setName('');\r\n        setMiddlename('');\r\n        setSurname('');\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Додай нового лектора тут</h1>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"lectorName\" id=\"lectorName\" type=\"text\" onChange={e => setName(e.target.value)} placeholder=\"Ім'я\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"lectorSurname\" id=\"lectorSurname\" type=\"text\" onChange={e => setSurname(e.target.value)} placeholder=\"Прізвище\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input name=\"lectorMiddlenae\" id=\"lectorMiddlenae\" type=\"text\" onChange={e => setMiddlename(e.target.value)} placeholder=\"По-батькові\" className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Створити лектора</button>\r\n                    )}\r\n                    {isLoading && <p>Відправляємо дані...</p>}\r\n\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddLecturerForm;","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Auth\\SignInForm.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Auth\\SignUpForm.js",["123"],"import { useState, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport classes from './AuthForm.module.css';\r\n\r\nconst SignUpForm = () => {\r\n    const history = useHistory();\r\n    const emailInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n    const usernameInputRef = useRef();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredEmail = emailInputRef.current.value;\r\n        const enteredPassword = passwordInputRef.current.value;\r\n        const enteredUsername = usernameInputRef.current.value;\r\n        // to - do: Add validation\r\n\r\n        setIsLoading(true);\r\n        fetch(\"http://localhost:8000/sign-up\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: enteredEmail,\r\n                password: enteredPassword,\r\n                username:enteredUsername,\r\n                returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                if (res.ok) {\r\n                    history.replace('/sign-in');\r\n                } else {\r\n                    return res.json().then((data) => {\r\n                        let errorMessage = 'Authentication failed!';\r\n                        throw new Error(errorMessage);\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className={classes.auth}>\r\n            <h1>Реєстрація</h1>\r\n            <form onSubmit={submitHandler}>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='username'>Ваш юзернейм</label>\r\n                    <input type='text' id='username' required ref={usernameInputRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='email'>Ваш мейл</label>\r\n                    <input type='email' id='email' required ref={emailInputRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='password'>Ваш пароль</label>\r\n                    <input\r\n                        type='password'\r\n                        id='password'\r\n                        required\r\n                        ref={passwordInputRef}\r\n                    />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    {!isLoading && (\r\n                        <button>Зареєструватись</button>\r\n                    )}\r\n                    {isLoading && <p>Надсилаємо запит...</p>}\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Forms\\AddGroupForm.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\components\\Records\\RecordsTable.js",["124","125","126","127","128","129","130","131","132","133"],"import {useState, useRef, useContext, useEffect} from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport React from \"react\";\r\n\r\nconst RecordsTable = () => {\r\n    const [records, setRecords] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n    const [sort, setSort] = useState([]);\r\n\r\n    const [value, setValue] = React.useState(1);\r\n    const [lectors, setLectors] = useState([]);\r\n    const [disciplines, setDisciplines] = useState([]);\r\n    const [filterByLector, setFilterByLector] = useState('');\r\n    const [filterByGroup, setFilterByGroup] = useState('');\r\n    const [filterByDiscipline, setFilterByDiscipline] = useState('');\r\n\r\n\r\n    const getLectors = async () => {\r\n        const data = await fetch(\"/lectors/all\");\r\n        const dataJson = await data.json();\r\n        setLectors(dataJson);\r\n    }\r\n\r\n    const getDisciplines = async () => {\r\n        const data = await fetch(\"/disciplines\");\r\n        const dataJson = await data.json();\r\n        setDisciplines(dataJson);\r\n    }\r\n\r\n\r\n    const fetchData = async () => {\r\n        console.log(\"here\")\r\n        let dataJson;\r\n        if(filterByLector !== ''){\r\n            const data = await fetch(\"/records/lecturer/\"+filterByLector);\r\n            dataJson = await data.json();\r\n            // setFilterByLector('');\r\n        }else if(filterByGroup !== ''){\r\n            console.log(\"by gro\");\r\n            console.log(filterByGroup);\r\n            const data = await fetch(\"/records/group/\"+filterByGroup);\r\n            dataJson = await data.json();\r\n            // setFilterByGroup('');\r\n        }else if(filterByDiscipline !== ''){\r\n            console.log(\"by discipline\");\r\n            console.log(filterByDiscipline)\r\n            const data = await fetch(\"/records/discipline/\"+filterByDiscipline);\r\n            dataJson = await data.json();\r\n            // setFilterByDiscipline('');\r\n        }else{\r\n            const data = await fetch(\"/records/all/full\");\r\n            dataJson = await data.json();\r\n        }\r\n\r\n\r\n        await getLectors();\r\n        await getDisciplines();\r\n        setRecords(dataJson);\r\n    }\r\n\r\n    useEffect(  () => {\r\n        fetchData();\r\n    }, [filterByLector,filterByDiscipline])\r\n\r\n\r\n    return (\r\n<>\r\n        <div>\r\n            <div>\r\n                <h2>Привіт, тут ти можеш обрати критерій фільтрації, щоб переглянути потрібні тобі записи!</h2>\r\n                <Paper square>\r\n                    <Tabs\r\n                        value={value}\r\n                        textColor=\"primary\"\r\n                        indicatorColor=\"primary\"\r\n                        onChange={(event, newValue) => {\r\n                            setValue(newValue);\r\n                        }}\r\n                    >\r\n                        <Tab label=\"Лектор\" />\r\n\r\n                        <Tab label=\"Дисципліна\" />\r\n                    </Tabs>\r\n\r\n\r\n                    {value === 0 && <p style={{paddingBottom: '30px', paddingTop: '30px'}}>\r\n                    <label htmlFor=\"ice-cream-choice\" style={{marginRight: '20px'}}>Оберіть лектора для фільтрації</label>\r\n                        <input list=\"ice-cream-flavors\" id=\"ice-cream-choice\"  onChange={e => setFilterByLector(e.target.value)} name=\"ice-cream-choice\" />\r\n\r\n                        <datalist id=\"ice-cream-flavors\">\r\n                            {(lectors || []).map(lector => (\r\n                            <option key={lector.lecturerId} value={lector.lecturerId}>{lector.surname + ' '+ lector.name + ' '+ lector.middlename}</option>\r\n                                ))}\r\n                        </datalist>\r\n                        </p>}\r\n\r\n\r\n                    {value === 1 && <p style={{paddingBottom: '30px', paddingTop: '30px'}}>\r\n                        <label  style={{marginRight: '20px'}}>Оберіть дисципліну для фільтрації</label>\r\n                        <input list=\"disc-lists\"  onChange={e => setFilterByDiscipline(e.target.value)} />\r\n\r\n                        <datalist id=\"disc-lists\">\r\n                            {(disciplines || []).map(discipline => (\r\n                                <option key={discipline.disciplineId} value={discipline.disciplineId}>{discipline.name}</option>\r\n                            ))}\r\n                        </datalist>\r\n                    </p>}\r\n\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Дисципліна</th>\r\n                <th>Час</th>\r\n                <th>№ групи</th>\r\n                <th>№ аудиторії</th>\r\n                <th>ПІБ лектора</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {(records || []).map(record => (\r\n                <tr>\r\n                    <td>{record.id}</td>\r\n                    <td>{record.disciplineName}</td>\r\n                    <td>{record.groupNumber}</td>\r\n                    <td>{record.weekNumber + \" тиждень, \"+record.weekDay + '. Час: ' + record.classTime}</td>\r\n                    <td>{record.classroomName}</td>\r\n                    <td>{record.lecturerSurname + ' '+ record.lecturerName + ' '+ record.lecturerMiddlename}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    </>\r\n    )\r\n};\r\n\r\n\r\nexport default RecordsTable;","C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\hooks\\getData.js",[],"C:\\Users\\iryna\\WebstormProjects\\kma-schedule-front\\src\\pages\\AddClassTimePage.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":15,"column":8,"nodeType":"140","messageId":"141","endLine":15,"endColumn":24},{"ruleId":"138","severity":1,"message":"142","line":25,"column":11,"nodeType":"140","messageId":"141","endLine":25,"endColumn":18},{"ruleId":"138","severity":1,"message":"143","line":1,"column":19,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"144","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"145","line":11,"column":11,"nodeType":"140","messageId":"141","endLine":11,"endColumn":18},{"ruleId":"138","severity":1,"message":"146","line":5,"column":12,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"147","line":6,"column":12,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"138","severity":1,"message":"148","line":23,"column":11,"nodeType":"140","messageId":"141","endLine":23,"endColumn":27},{"ruleId":"138","severity":1,"message":"143","line":1,"column":19,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"144","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"145","line":11,"column":11,"nodeType":"140","messageId":"141","endLine":11,"endColumn":18},{"ruleId":"138","severity":1,"message":"149","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"138","severity":1,"message":"143","line":1,"column":19,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"149","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":37},{"ruleId":"138","severity":1,"message":"150","line":9,"column":12,"nodeType":"140","messageId":"141","endLine":9,"endColumn":19},{"ruleId":"138","severity":1,"message":"151","line":9,"column":21,"nodeType":"140","messageId":"141","endLine":9,"endColumn":31},{"ruleId":"138","severity":1,"message":"152","line":10,"column":12,"nodeType":"140","messageId":"141","endLine":10,"endColumn":20},{"ruleId":"138","severity":1,"message":"153","line":10,"column":22,"nodeType":"140","messageId":"141","endLine":10,"endColumn":33},{"ruleId":"138","severity":1,"message":"154","line":11,"column":12,"nodeType":"140","messageId":"141","endLine":11,"endColumn":16},{"ruleId":"138","severity":1,"message":"155","line":11,"column":18,"nodeType":"140","messageId":"141","endLine":11,"endColumn":25},{"ruleId":"138","severity":1,"message":"156","line":17,"column":27,"nodeType":"140","messageId":"141","endLine":17,"endColumn":43},{"ruleId":"157","severity":1,"message":"158","line":66,"column":8,"nodeType":"159","endLine":66,"endColumn":43,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'AddClassTimeForm' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'useRef' is defined but never used.","'useHistory' is defined but never used.","'authCtx' is assigned a value but never used.","'admin' is assigned a value but never used.","'user' is assigned a value but never used.","'deleteDiscipline' is assigned a value but never used.","'useContext' is defined but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'sort' is assigned a value but never used.","'setSort' is assigned a value but never used.","'setFilterByGroup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [filterByLector, filterByDiscipline, fetchData]",{"range":"166","text":"167"},[2309,2344],"[filterByLector, filterByDiscipline, fetchData]"]